{"version":3,"sources":["components/taskboard/task.js","components/NewTask/NewTask.js","components/taskboard/taskboard.js","components/header/header.js","components/FixedHeader/fixedHeader.js","App.js","serviceWorker.js","index.js"],"names":["TaskInfo","props","className","task","priority","class","onClick","deleteTask","id","title","image","src","alt","notification","comments","attachments","users","map","user","key","userid","usericon","AddNewTask","getUsers","axios","get","then","res","data","setState","submitForm","e","refreshChild","closePopup","preventDefault","formJSON","formToJSON","document","getElementById","elements","console","log","post","window","scrollTo","body","scrollHeight","reduce","call","element","name","value","state","formValid","bind","this","usersList","JSON","stringify","username","close","onSubmit","refreshTasks","type","total","placeholder","required","React","Component","TaskDashboard","getTasksList","taskData","onDragOver","dragStart","event","dragObjectId","target","onDrop","currentTarget","taskID","status","removeTask","toDoTasks","filter","inProgressTasks","inReviewTasks","completedTasks","size","color","htmlFor","draggable","onDragStart","modal","trigger","length","Header","href","FixedHeader","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.29c47381.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaPaperclip, FaBell, FaComment, FaCheck } from \"react-icons/fa\";\r\n\r\nfunction TaskInfo(props) {\r\n  return (\r\n    <div className={\"task \" + props.task.priority}>\r\n      <div class=\"delete-task\" onClick={() => props.deleteTask(props.task.id)}><span>&#9587;</span></div>\r\n      <div className=\"task-title\">\r\n        <h3>{props.task.title}</h3>\r\n      </div>\r\n      {props.task.image && (\r\n        <div className=\"task-image\">\r\n          <img\r\n            src={\"http://localhost:4000/file/\" + props.task.image}\r\n            alt=\"task image\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"task-info\">\r\n        <div className=\"task-date info-with-icon\">\r\n          <span className=\"icon-bell\">\r\n            <FaBell />\r\n          </span>\r\n          <span className=\"icon-check\">\r\n            <FaCheck />\r\n          </span>\r\n          <span>{props.task.notification}</span>\r\n        </div>\r\n        <div className=\"comments info-with-icon\">\r\n          <span>\r\n            <FaComment />\r\n          </span>\r\n          <span>{props.task.comments}</span>\r\n        </div>\r\n        <div className=\"attachments info-with-icon\">\r\n          <span>\r\n            <FaPaperclip />\r\n          </span>\r\n          <span>{props.task.attachments}</span>\r\n        </div>\r\n        <div className=\"users\">\r\n          {props.task.users.map((user) => (\r\n            <div className=\"users-icon\" key={user.userid}>\r\n              <img\r\n                src={\"http://localhost:4000/file/\" + user.usericon}\r\n                alt=\"user\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskInfo;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass AddNewTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      formValid: false,\r\n    };\r\n    this.getUsers = this.getUsers.bind(this);\r\n  }\r\n\r\n  // Function to get list of all users\r\n  getUsers = () => {\r\n    axios.get(`http://localhost:4000/users`).then((res) => {\r\n      const users = res.data;\r\n      this.setState({\r\n        users: users,\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  // Function to submit form of Add New task\r\n  submitForm = (e, refreshChild, closePopup) => {\r\n    e.preventDefault();\r\n    let formJSON = this.formToJSON(\r\n      document.getElementById(\"add-task-form\").elements\r\n    );\r\n    console.log(formJSON);\r\n    axios\r\n      .post(\"http://localhost:4000/add-new-task\", { formJSON })\r\n      .then((res) => {\r\n        if (res.data == \"success\") {\r\n          refreshChild();\r\n          closePopup();\r\n          window.scrollTo(0, document.body.scrollHeight);\r\n        }\r\n      });\r\n  };\r\n\r\n  // Function to convert form data to json format\r\n  formToJSON = (elements) =>\r\n    [].reduce.call(\r\n      elements,\r\n      (data, element) => {\r\n        data[element.name] = element.value;\r\n        return data;\r\n      },\r\n      {}\r\n    );\r\n\r\n  // Function to get users list\r\n\r\n  render() {\r\n    const usersList = this.state.users.map((user) => (\r\n      <option value={JSON.stringify(user)} key={user.userid}>\r\n        {user.username}\r\n      </option>\r\n    ));\r\n    return (\r\n      <div className=\"new-task-wrapper\">\r\n        <div className=\"add-new-task-form\">\r\n          <div className=\"heading\">\r\n            <h2>Create New Task</h2>\r\n            <div className=\"close-pop-up\" onClick={this.props.close}>\r\n              <span>&#9587;</span>\r\n            </div>\r\n          </div>\r\n          <form\r\n            id=\"add-task-form\"\r\n            onSubmit={(e) => {\r\n              this.submitForm(e, this.props.refreshTasks, this.props.close);\r\n            }}\r\n          >\r\n            <input type=\"hidden\" name=\"total\" value={this.props.total} />\r\n            <div className=\"input-field\">\r\n              <label>Title : </label>\r\n              <input type=\"text\" name=\"title\" placeholder=\"Please enter title\" required />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label>Description : </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                placeholder=\"Please enter description\"\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label>Select User : </label>\r\n              <select name=\"user\" placeholder=\"user\" required>\r\n                {usersList}\r\n              </select>\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label>Priority : </label>\r\n              <select name=\"priority\" placeholder=\"priority\" required>\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"submit-btn\">\r\n              <button type=\"submit\">Add Task</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewTask;\r\n","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AiOutlineStar,\r\n  AiOutlineUser,\r\n  AiOutlineClockCircle,\r\n} from \"react-icons/ai\";\r\nimport TaskInfo from \"./task\";\r\nimport AddNewTask from \"../NewTask/NewTask\";\r\n\r\nclass TaskDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskData: [],\r\n      dragObjectId: \"\",\r\n    };\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n    this.dragStart = this.dragStart.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n    this.getTasksList = this.getTasksList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTasksList();\r\n  }\r\n\r\n  // Function to get list of all tasks\r\n  getTasksList = () => {\r\n    axios.get(`http://localhost:4000/task-list`).then((res) => {\r\n      const taskData = res.data;\r\n      this.setState({\r\n        taskData: taskData,\r\n      });\r\n    });\r\n  };\r\n  // Function to prevent default drag event\r\n  onDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Function to get dragged task ID\r\n  dragStart = (event) => {\r\n    this.state.dragObjectId = event.target.id;\r\n  };\r\n\r\n  // Function to update tasks on Drop\r\n  onDrop = (e) => {\r\n    let target = e.currentTarget.id;\r\n    let taskID = this.state.dragObjectId;\r\n    // Function to update the send task data\r\n    axios\r\n      .post(\"http://localhost:4000/update-task\", {\r\n        status: target,\r\n        id: taskID,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data == \"success\") {\r\n          this.getTasksList();\r\n          window.scrollTo(0, document.body.scrollHeight);\r\n        }\r\n      });\r\n  };\r\n\r\n  removeTask = (taskID) => {\r\n     axios\r\n       .post(\"http://localhost:4000/delete-task\", {\r\n         id: taskID,\r\n       })\r\n       .then((res) => {\r\n         if (res.data == \"success\") {\r\n           this.getTasksList();\r\n         }\r\n       });\r\n  };\r\n\r\n  render() {\r\n    // Todo tasks list\r\n    const toDoTasks = this.state.taskData.filter((task) => {\r\n      if (task.status === \"todo\") {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    // In progress task list\r\n    const inProgressTasks = this.state.taskData.filter((task) => {\r\n      if (task.status === \"inProgress\") {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    //   In review tasks list\r\n    const inReviewTasks = this.state.taskData.filter((task) => {\r\n      if (task.status === \"inReview\") {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    //   Completed tasks list\r\n    const completedTasks = this.state.taskData.filter((task) => {\r\n      if (task.status === \"done\") {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"dashboard-heading\">\r\n            <div className=\"star-icon\">\r\n              <AiOutlineStar size={24} color={\"#888\"} />\r\n            </div>\r\n            <div className=\"people-count\">\r\n              <div className=\"details\">\r\n                <span>\r\n                  <AiOutlineUser size={14} />\r\n                </span>\r\n                <span>6</span>\r\n                <span>People</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"days-left\">\r\n              <div className=\"details\">\r\n                <span>\r\n                  <AiOutlineClockCircle size={14} />\r\n                </span>\r\n                <span>2</span>\r\n                <span>days left</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"show-my-tasks\">\r\n              <span>Show my tasks only</span>\r\n              <div className=\"checkbox\">\r\n                <input type=\"checkbox\" id=\"my-tasks\" />\r\n                <label htmlFor=\"my-tasks\"></label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"dashboard-data\">\r\n            {/* Todo Tasks */}\r\n            <div\r\n              className=\"to-do-tasks tasks-list-wrapper\"\r\n              id=\"todo\"\r\n              onDragOver={(e) => this.onDragOver(e)}\r\n              onDrop={(e) => this.onDrop(e)}\r\n            >\r\n              <div className=\"list-heading\">\r\n                <h2>ToDo</h2>\r\n                <div className=\"more\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"tasks-list\">\r\n                <ul>\r\n                  {toDoTasks.map((task) => (\r\n                    <li\r\n                      draggable\r\n                      id={task.id}\r\n                      key={task.id}\r\n                      className=\"draggable\"\r\n                      onDragStart={(e) => this.dragStart(e)}\r\n                    >\r\n                      <TaskInfo task={task} deleteTask={this.removeTask} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {/* In Progress tasks */}\r\n            <div\r\n              className=\"in-progress-tasks tasks-list-wrapper\"\r\n              id=\"inProgress\"\r\n              onDragOver={(e) => this.onDragOver(e)}\r\n              onDrop={(e) => this.onDrop(e)}\r\n            >\r\n              <div className=\"list-heading\">\r\n                <h2>In Progress</h2>\r\n                <div className=\"rec\">\r\n                  <span className=\"circle\"></span>\r\n                  <span>REC</span>\r\n                </div>\r\n                <div className=\"more\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"tasks-list\">\r\n                <ul>\r\n                  {inProgressTasks.map((task) => (\r\n                    <li\r\n                      draggable\r\n                      id={task.id}\r\n                      key={task.id}\r\n                      className=\"draggable\"\r\n                      onDragStart={(e) => this.dragStart(e)}\r\n                    >\r\n                      <TaskInfo task={task} deleteTask={this.removeTask} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {/* In Review tasks */}\r\n            <div\r\n              className=\"in-review-tasks tasks-list-wrapper\"\r\n              id=\"inReview\"\r\n              onDragOver={(e) => this.onDragOver(e)}\r\n              onDrop={(e) => this.onDrop(e)}\r\n            >\r\n              <div className=\"list-heading\">\r\n                <h2>In review</h2>\r\n                <div className=\"more\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"tasks-list\">\r\n                <ul>\r\n                  {inReviewTasks.map((task) => (\r\n                    <li\r\n                      draggable\r\n                      id={task.id}\r\n                      key={task.id}\r\n                      className=\"draggable\"\r\n                      onDragStart={(e) => this.dragStart(e)}\r\n                    >\r\n                      <TaskInfo task={task} deleteTask={this.removeTask} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {/* Completed Tasks */}\r\n            <div\r\n              className=\"completed-tasks tasks-list-wrapper\"\r\n              id=\"done\"\r\n              onDragOver={(e) => this.onDragOver(e)}\r\n              onDrop={(e) => this.onDrop(e)}\r\n            >\r\n              <div className=\"list-heading\">\r\n                <h2>Done</h2>\r\n                <div className=\"more\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"tasks-list\">\r\n                <ul>\r\n                  {completedTasks.map((task) => (\r\n                    <li\r\n                      draggable\r\n                      id={task.id}\r\n                      key={task.id}\r\n                      className=\"draggable\"\r\n                      onDragStart={(e) => this.dragStart(e)}\r\n                    >\r\n                      <TaskInfo task={task} deleteTask={this.removeTask} />\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Popup\r\n          modal\r\n          trigger={\r\n            <div className=\"add-new-task\">\r\n              <span>&#9547;</span>\r\n            </div>\r\n          }\r\n        >\r\n          {(close) => (\r\n            <AddNewTask\r\n              total={this.state.taskData.length}\r\n              refreshTasks={this.getTasksList}\r\n              close={close}\r\n            />\r\n          )}\r\n        </Popup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskDashboard;\r\n","import React from \"react\";\r\nimport { FaPaperclip, FaBell, FaComment, FaCheck } from \"react-icons/fa\";\r\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"all-projects\">\r\n          <a href=\"#\">\r\n            <span>\r\n              <AiOutlineArrowLeft size={20} />\r\n            </span>\r\n            <span>All Projects</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"heading\">\r\n          <h1>\r\n            Supermassive black hole <span></span>\r\n          </h1>\r\n        </div>\r\n        <div className=\"header-links\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"search\">\r\n                <img\r\n                  src=\"http://localhost:4000/file/search.jpg\" alt=\"search\"\r\n                />\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"notification\">\r\n                <span className=\"count\">3</span>\r\n                <img\r\n                  src=\"http://localhost:4000/file/bell-icon.png\" alt=\"bell icon\"\r\n                />\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"user-image\">\r\n                <img\r\n                  src=\"http://localhost:4000/file/user.jpg\" alt=\"user image\"\r\n                />\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FaPaperclip, FaBell, FaComment, FaCheck } from \"react-icons/fa\";\r\n\r\nfunction FixedHeader() {\r\n  return (\r\n    <div className=\"fixed-left-header\">\r\n      <div className=\"fixed-header-items\">\r\n        <div className=\"logo\">\r\n          <img src=\"http://localhost:4000/file/cam.png\" />\r\n        </div>\r\n        <div className=\"nav-links\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">\r\n                <img src=\"http://localhost:4000/file/cam.png\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <img src=\"http://localhost:4000/file/home.png\" />\r\n              </a>\r\n            </li>\r\n            <li className=\"active\">\r\n              <a href=\"#\">\r\n                <img src=\"http://localhost:4000/file/square.png\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <img src=\"http://localhost:4000/file/user-icon.png\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <img src=\"http://localhost:4000/file/calendar.png\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedHeader;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport TaskDashboard from \"./components/taskboard/taskboard\";\nimport Header from \"./components/header/header\";\nimport FixedHeader from \"./components/FixedHeader/fixedHeader\";\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <main>\n        <FixedHeader />\n        <TaskDashboard />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}